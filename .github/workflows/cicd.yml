name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: mydatabase
          POSTGRES_USER: myuser
          POSTGRES_PASSWORD: mypassword
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U myuser -d mydatabase"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DATABASE_NAME: mydatabase
      DATABASE_USER: myuser
      DATABASE_PASSWORD: mypassword
      DATABASE_HOST: 127.0.0.1
      DATABASE_PORT: 5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and tag backend Docker image
      run: |
        docker buildx build --tag ${{ secrets.DOCKER_USERNAME }}/myapp-backend:latest ./itfa_backend

    - name: Build and tag frontend Docker image
      run: |
        docker buildx build --tag ${{ secrets.DOCKER_USERNAME }}/myapp-frontend:latest ./itfa_frontend

    - name: Run backend tests
      run: |
        docker-compose -f docker-compose.yml up -d db
        docker run --network host ${{ secrets.DOCKER_USERNAME }}/myapp-backend:latest python manage.py test

    - name: Run frontend tests
      run: |
        docker run --network host ${{ secrets.DOCKER_USERNAME }}/myapp-frontend:latest npm test

    - name: Push backend Docker image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/myapp-backend:latest

    - name: Push frontend Docker image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/myapp-frontend:latest
